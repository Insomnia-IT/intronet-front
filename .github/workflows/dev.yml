name: Docker Build

on:
  push:
    branches:
      - 'develop'

env:
  CLUSTER_NAME: InsightKube
  CLUSTER_RESOURCE_GROUP: Insight
  DEPLOYMENT_MANIFEST_PATH: |
    ./.deploy/prod/kubernetes.yaml
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v3

      - name: substitute GITHUB_SHA in docker
        working-directory: ./.deploy/prod
        run: |
          sed -i s/GITHUB_SHA/${GITHUB_SHA}/g ./docker-compose.yml

      - name: build docker
        working-directory: ./.deploy/prod
        run: docker compose build

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: push docker
        working-directory: ./.deploy/prod
        run: docker compose push
       
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SRV_DEV_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SRV_DEV_HOST }} >> ~/.ssh/known_hosts        
          
      - name: Deploy via SSH
        env:
          DB_PASSWORD: ${{ secrets.ENV_DEV_DB_PASSWORD }}
          KIBANA_PASSWORD: ${{ secrets.ENV_DEV_KIBANA_PASSWORD }}
          GRAFANA_PASSWORD: ${{ secrets.ENV_DEV_GRAFANA_PASSWORD }}
        run: |
          ssh ${{ secrets.SRV_DEV_USER_NAME }}@${{ secrets.SRV_DEV_HOST }} << EOF
            set -e
            BRANCH="develop"
            DIR="/opt/insomnia-app/intronet/\$BRANCH"
            REPO="https://github.com/Insomnia-IT/intronet-front-deploy.git"
      
            mkdir -p "\$DIR"
            cd "\$DIR"
      
            if [ ! -d "\$DIR/intronet-front-deploy/.git" ]; then
              git clone -b prod "\$REPO" "\$DIR/intronet-front-deploy"
              cd "\$DIR/intronet-front-deploy"
            else
              cd "\$DIR/intronet-front-deploy"
              git fetch origin prod
              git checkout prod
              git pull origin prod
            fi
      
            GITHUB_SHA_NOW=\$(git ls-remote https://github.com/Insomnia-IT/intronet-front/ develop | head -1 | awk '{print \$1}')
            
            cp env.example .env   
            sed -i "s|\\\$DB_PASSWORD|$DB_PASSWORD|g" .env
            sed -i "s|\\\$KIBANA_PASSWORD|$KIBANA_PASSWORD|g" .env
            sed -i "s|\\\$GRAFANA_PASSWORD|$GRAFANA_PASSWORD|g" .env
            sed -i "s|\\\$GITHUB_SHA|\$GITHUB_SHA_NOW|g" .env
      
            docker compose --project-name intronet-\$BRANCH pull
            docker compose --project-name intronet-\$BRANCH up -d
          EOF
