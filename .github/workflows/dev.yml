name: Docker Build

on:
  push:
    branches:
      - 'develop'

env:
  CLUSTER_NAME: InsightKube
  CLUSTER_RESOURCE_GROUP: Insight
  DEPLOYMENT_MANIFEST_PATH: |
    ./.deploy/prod/kubernetes.yaml
jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v3
       
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SRV_DEV_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.SRV_DEV_HOST }} >> ~/.ssh/known_hosts        
      - name: Deploy via SSH
        run: |
          ssh ${{ secrets.SRV_DEV_USER_NAME }}@${{ secrets.SRV_DEV_HOST }} << 'EOF'
            set -e
            BRANCH="develop"
            DIR="/opt/insomnia-app/intronet/$BRANCH"
            REPO="https://github.com/Insomnia-IT/intronet-front-deploy.git"

            mkdir -p "$DIR"
            cd "$DIR"

            # Проверяем, существует ли директория и является ли она репозиторием Git
            if [ ! -d "$DIR/intronet-front-deploy/.git" ]; then
              # Если нет, то клонируем репозиторий
              git clone -b prod "$REPO" "$DIR/intronet-front-deploy"
              cd "$DIR/intronet-front-deploy"
            else
              # Если да, то переходим в директорию и выполняем git pull
              cd "$DIR/intronet-front-deploy"
              git fetch origin prod
              git checkout prod
              git pull origin prod
            fi

            GITHUB_SHA_NOW=$(git ls-remote https://github.com/Insomnia-IT/intronet-front/ | head -1 | awk '{print $1}')

            if [ "$BRANCH" = "develop" ]; then
              sed -i "s|\$DB_PASSWORD|${{ secrets.ENV_DEV_DB_PASSWORD }}|g" .env
              sed -i "s|\$KIBANA_PASSWORD|${{ secrets.ENV_DEV_KIBANA_PASSWORD }}|g" .env
              sed -i "s|\$GRAFANA_PASSWORD|${{ secrets.ENV_DEV_GRAFANA_PASSWORD }}|g" .env
              sed -i "s|\$GITHUB_SHA|$GITHUB_SHA_NOW|g" .env                
            fi
              
            docker compose --project-name intronet-$BRANCH pull
            docker compose --project-name intronet-$BRANCH up -d
          EOF
